import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Progress } from "@/components/ui/progress";
import { Slider } from "@/components/ui/slider";
import { 
  Video, 
  Mic, 
  Download, 
  Play, 
  Pause,
  Settings,
  Share2,
  Eye,
  TrendingUp,
  Zap,
  Brain,
  Globe,
  MessageSquare,
  BarChart3,
  Clock,
  CheckCircle,
  AlertTriangle,
  Camera,
  Wand2,
  Languages,
  Users,
  Target,
  Smartphone,
  Monitor,
  Volume2,
  FileVideo,
  Palette,
  Hash
} from 'lucide-react';

const CivicVideoGenerator = () => {
  const [selectedTopic, setSelectedTopic] = useState('');
  const [selectedLanguage, setSelectedLanguage] = useState('');
  const [selectedTone, setSelectedTone] = useState('');
  const [selectedFormat, setSelectedFormat] = useState('');
  const [selectedVoice, setSelectedVoice] = useState('');
  const [scriptContent, setScriptContent] = useState('');
  const [videoTitle, setVideoTitle] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [videoProgress, setVideoProgress] = useState(0);
  const [autoTriggerEnabled, setAutoTriggerEnabled] = useState(true);

  const topics = [
    { id: 'elections', name: 'Elections & Voting', icon: '🗳️', description: 'Voter education and election processes' },
    { id: 'promises', name: 'Political Promises', icon: '📋', description: 'Promise tracking and accountability' },
    { id: 'disinfo', name: 'Disinformation Correction', icon: '🛡️', description: 'Fact-checking and truth clarification' },
    { id: 'rights', name: 'Citizen Rights', icon: '⚖️', description: 'Constitutional rights and freedoms' },
    { id: 'projects', name: 'National Projects', icon: '🏗️', description: 'Infrastructure and development updates' },
    { id: 'unity', name: 'National Unity', icon: '🇨🇲', description: 'Peace-building and social cohesion' }
  ];

  const languages = [
    { id: 'english', name: 'English', flag: '🇬🇧' },
    { id: 'french', name: 'French', flag: '🇫🇷' },
    { id: 'pidgin', name: 'Pidgin English', flag: '🗣️' }
  ];

  const tones = [
    { id: 'youth', name: 'Youth-friendly', description: 'Energetic, modern, social media style' },
    { id: 'elder', name: 'Elder Respectful', description: 'Traditional, formal, respectful approach' },
    { id: 'neutral', name: 'Neutral', description: 'Professional, balanced, informative' },
    { id: 'urgent', name: 'Urgent', description: 'Important, immediate, action-required' }
  ];

  const formats = [
    { id: 'tiktok', name: 'TikTok Vertical', icon: Smartphone, dimensions: '9:16', duration: '15-60s' },
    { id: 'whatsapp', name: 'WhatsApp Status', icon: MessageSquare, dimensions: '16:9', duration: '30s' },
    { id: 'instagram', name: 'Instagram Reels', icon: Camera, dimensions: '9:16', duration: '15-90s' },
    { id: 'tv', name: 'TV Broadcast', icon: Monitor, dimensions: '16:9', duration: '30-120s' }
  ];

  const voices = [
    { id: 'youth_male', name: 'Youthful Male', description: 'Energetic, friendly male voice' },
    { id: 'youth_female', name: 'Youthful Female', description: 'Bright, engaging female voice' },
    { id: 'mature_neutral', name: 'Mature Neutral', description: 'Professional, authoritative voice' },
    { id: 'pidgin_authentic', name: 'Pidgin Authentic', description: 'Natural Cameroonian Pidgin speaker' }
  ];

  const recentVideos = [
    {
      id: 1,
      title: 'How to Vote in 2024 Elections',
      topic: 'Elections',
      language: 'English',
      format: 'TikTok',
      views: 15420,
      shares: 892,
      engagement: 85,
      status: 'published'
    },
    {
      id: 2,
      title: 'Understanding Your Rights',
      topic: 'Rights',
      language: 'French',
      format: 'WhatsApp',
      views: 8930,
      shares: 445,
      engagement: 72,
      status: 'published'
    },
    {
      id: 3,
      title: 'Fact Check: Road Project Update',
      topic: 'Projects',
      language: 'Pidgin',
      format: 'Instagram',
      views: 12100,
      shares: 687,
      engagement: 78,
      status: 'generating'
    }
  ];

  const generationStats = {
    totalVideos: 47,
    totalViews: 324580,
    avgEngagement: 76,
    autoGenerated: 12,
    topPerformingFormat: 'TikTok',
    topPerformingLanguage: 'English'
  };

  const platformMetrics = [
    { platform: 'TikTok', videos: 18, views: 145200, engagement: 82 },
    { platform: 'WhatsApp', videos: 15, views: 89340, engagement: 75 },
    { platform: 'Instagram', videos: 10, views: 67890, engagement: 78 },
    { platform: 'TV Broadcast', videos: 4, views: 22150, engagement: 68 }
  ];

  const handleGenerateVideo = () => {
    setIsGenerating(true);
    setVideoProgress(0);
    
    // Simulate video generation progress
    const interval = setInterval(() => {
      setVideoProgress(prev => {
        if (prev >= 100) {
          clearInterval(interval);
          setIsGenerating(false);
          return 100;
        }
        return prev + 10;
      });
    }, 1000);
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center gap-3 mb-6">
        <div className="flex items-center justify-center w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-xl">
          <Video className="h-6 w-6 text-white" />
        </div>
        <div>
          <h1 className="text-2xl font-bold text-foreground">AI Civic Video Generator</h1>
          <p className="text-muted-foreground">Transform civic topics into engaging visual content for all platforms</p>
        </div>
      </div>

      <Tabs defaultValue="generator" className="space-y-6">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="generator" className="flex items-center gap-2">
            <Wand2 className="h-4 w-4" />
            Generator
          </TabsTrigger>
          <TabsTrigger value="library" className="flex items-center gap-2">
            <FileVideo className="h-4 w-4" />
            Video Library
          </TabsTrigger>
          <TabsTrigger value="analytics" className="flex items-center gap-2">
            <BarChart3 className="h-4 w-4" />
            Impact Analytics
          </TabsTrigger>
          <TabsTrigger value="automation" className="flex items-center gap-2">
            <Zap className="h-4 w-4" />
            Auto-Triggers
          </TabsTrigger>
          <TabsTrigger value="export" className="flex items-center gap-2">
            <Share2 className="h-4 w-4" />
            Export Tools
          </TabsTrigger>
        </TabsList>

        {/* Video Generator */}
        <TabsContent value="generator" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Content Configuration */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Settings className="h-5 w-5" />
                  Content Configuration
                </CardTitle>
                <CardDescription>
                  Configure your video content and style
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="title">Video Title</Label>
                  <Input
                    id="title"
                    placeholder="Enter video title..."
                    value={videoTitle}
                    onChange={(e) => setVideoTitle(e.target.value)}
                  />
                </div>

                <div className="space-y-2">
                  <Label>Topic Category</Label>
                  <Select value={selectedTopic} onValueChange={setSelectedTopic}>
                    <SelectTrigger>
                      <SelectValue placeholder="Choose topic..." />
                    </SelectTrigger>
                    <SelectContent>
                      {topics.map((topic) => (
                        <SelectItem key={topic.id} value={topic.id}>
                          <div className="flex items-center gap-2">
                            <span>{topic.icon}</span>
                            <div>
                              <p className="font-medium">{topic.name}</p>
                              <p className="text-xs text-muted-foreground">{topic.description}</p>
                            </div>
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label>Language</Label>
                    <Select value={selectedLanguage} onValueChange={setSelectedLanguage}>
                      <SelectTrigger>
                        <SelectValue placeholder="Select..." />
                      </SelectTrigger>
                      <SelectContent>
                        {languages.map((lang) => (
                          <SelectItem key={lang.id} value={lang.id}>
                            <span className="flex items-center gap-2">
                              {lang.flag} {lang.name}
                            </span>
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label>Tone & Style</Label>
                    <Select value={selectedTone} onValueChange={setSelectedTone}>
                      <SelectTrigger>
                        <SelectValue placeholder="Select..." />
                      </SelectTrigger>
                      <SelectContent>
                        {tones.map((tone) => (
                          <SelectItem key={tone.id} value={tone.id}>
                            {tone.name}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Script Content</Label>
                  <Textarea
                    placeholder="Enter your script or let AI generate one..."
                    value={scriptContent}
                    onChange={(e) => setScriptContent(e.target.value)}
                    rows={4}
                  />
                </div>

                <Button variant="outline" className="w-full flex items-center gap-2">
                  <Brain className="h-4 w-4" />
                  AI Generate Script
                </Button>
              </CardContent>
            </Card>

            {/* Format & Voice */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Palette className="h-5 w-5" />
                  Format & Voice Settings
                </CardTitle>
                <CardDescription>
                  Choose platform format and voice style
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label>Platform Format</Label>
                  <div className="grid grid-cols-2 gap-2">
                    {formats.map((format) => {
                      const IconComponent = format.icon;
                      return (
                        <Button
                          key={format.id}
                          variant={selectedFormat === format.id ? "default" : "outline"}
                          className="flex flex-col items-center gap-2 h-auto p-3"
                          onClick={() => setSelectedFormat(format.id)}
                        >
                          <IconComponent className="h-5 w-5" />
                          <div className="text-center">
                            <p className="font-medium text-xs">{format.name}</p>
                            <p className="text-xs text-muted-foreground">{format.dimensions}</p>
                            <p className="text-xs text-muted-foreground">{format.duration}</p>
                          </div>
                        </Button>
                      );
                    })}
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Voice Style</Label>
                  <Select value={selectedVoice} onValueChange={setSelectedVoice}>
                    <SelectTrigger>
                      <SelectValue placeholder="Choose voice..." />
                    </SelectTrigger>
                    <SelectContent>
                      {voices.map((voice) => (
                        <SelectItem key={voice.id} value={voice.id}>
                          <div>
                            <p className="font-medium">{voice.name}</p>
                            <p className="text-xs text-muted-foreground">{voice.description}</p>
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-3">
                  <Label>Visual Style Options</Label>
                  <div className="space-y-2">
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Include Charts</span>
                      <Switch />
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Regional Maps</span>
                      <Switch />
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Party Logos</span>
                      <Switch />
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-sm">Emoji Style</span>
                      <Switch />
                    </div>
                  </div>
                </div>

                {isGenerating ? (
                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <span className="text-sm font-medium">Generating Video...</span>
                      <span className="text-sm text-muted-foreground">{videoProgress}%</span>
                    </div>
                    <Progress value={videoProgress} className="h-2" />
                    <div className="text-xs text-muted-foreground">
                      {videoProgress < 30 && "Creating script and visuals..."}
                      {videoProgress >= 30 && videoProgress < 60 && "Generating voice-over..."}
                      {videoProgress >= 60 && videoProgress < 90 && "Assembling video components..."}
                      {videoProgress >= 90 && "Finalizing and optimizing..."}
                    </div>
                  </div>
                ) : (
                  <Button 
                    className="w-full flex items-center gap-2"
                    onClick={handleGenerateVideo}
                    disabled={!selectedTopic || !selectedFormat}
                  >
                    <Video className="h-4 w-4" />
                    Generate Video
                  </Button>
                )}
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Video Library */}
        <TabsContent value="library" className="space-y-6">
          {/* Stats Overview */}
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
            <Card>
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-muted-foreground">Total Videos</p>
                    <p className="text-2xl font-bold">{generationStats.totalVideos}</p>
                  </div>
                  <Video className="h-8 w-8 text-purple-500" />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-muted-foreground">Total Views</p>
                    <p className="text-2xl font-bold">{generationStats.totalViews.toLocaleString()}</p>
                  </div>
                  <Eye className="h-8 w-8 text-blue-500" />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-muted-foreground">Avg Engagement</p>
                    <p className="text-2xl font-bold">{generationStats.avgEngagement}%</p>
                  </div>
                  <TrendingUp className="h-8 w-8 text-green-500" />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-muted-foreground">Auto-Generated</p>
                    <p className="text-2xl font-bold">{generationStats.autoGenerated}</p>
                  </div>
                  <Zap className="h-8 w-8 text-orange-500" />
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Recent Videos */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <FileVideo className="h-5 w-5" />
                Recent Videos
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {recentVideos.map((video) => (
                  <div key={video.id} className="p-4 border rounded-lg space-y-3">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="font-semibold">{video.title}</h3>
                        <div className="flex items-center gap-2 mt-1">
                          <Badge variant="secondary">{video.topic}</Badge>
                          <Badge variant="outline">{video.language}</Badge>
                          <Badge variant="outline">{video.format}</Badge>
                          <Badge variant={video.status === 'published' ? 'default' : 'secondary'}>
                            {video.status}
                          </Badge>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Button variant="outline" size="sm">
                          <Play className="h-4 w-4" />
                        </Button>
                        <Button variant="outline" size="sm">
                          <Download className="h-4 w-4" />
                        </Button>
                      </div>
                    </div>

                    <div className="grid grid-cols-3 gap-4 text-sm">
                      <div>
                        <p className="text-muted-foreground">Views</p>
                        <p className="font-semibold">{video.views.toLocaleString()}</p>
                      </div>
                      <div>
                        <p className="text-muted-foreground">Shares</p>
                        <p className="font-semibold">{video.shares.toLocaleString()}</p>
                      </div>
                      <div>
                        <p className="text-muted-foreground">Engagement</p>
                        <p className="font-semibold">{video.engagement}%</p>
                      </div>
                    </div>

                    <Progress value={video.engagement} className="h-2" />
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Impact Analytics */}
        <TabsContent value="analytics" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <BarChart3 className="h-5 w-5" />
                  Platform Performance
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {platformMetrics.map((platform) => (
                    <div key={platform.platform} className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="font-medium">{platform.platform}</span>
                        <div className="text-right">
                          <p className="text-sm font-semibold">{platform.engagement}%</p>
                          <p className="text-xs text-muted-foreground">{platform.videos} videos</p>
                        </div>
                      </div>
                      <Progress value={platform.engagement} className="h-2" />
                      <p className="text-xs text-muted-foreground">
                        {platform.views.toLocaleString()} total views
                      </p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Target className="h-5 w-5" />
                  Content Impact Analysis
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div className="p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
                    <p className="font-medium text-green-900 dark:text-green-100">Top Performing Topic</p>
                    <p className="text-sm text-green-700 dark:text-green-300">Elections & Voting (89% engagement)</p>
                  </div>
                  <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                    <p className="font-medium text-blue-900 dark:text-blue-100">Best Language</p>
                    <p className="text-sm text-blue-700 dark:text-blue-300">English (82% avg engagement)</p>
                  </div>
                  <div className="p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
                    <p className="font-medium text-purple-900 dark:text-purple-100">Optimal Duration</p>
                    <p className="text-sm text-purple-700 dark:text-purple-300">45-60 seconds (highest completion rate)</p>
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <h4 className="font-medium mb-2">Regional Engagement</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Centre Region</span>
                      <span className="font-semibold">94%</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Northwest</span>
                      <span className="font-semibold">87%</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Southwest</span>
                      <span className="font-semibold">83%</span>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Auto-Triggers */}
        <TabsContent value="automation" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Zap className="h-5 w-5" />
                  Automated Video Triggers
                </CardTitle>
                <CardDescription>
                  Configure automatic video generation based on events
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div className="flex items-center gap-3">
                      <AlertTriangle className="h-5 w-5 text-orange-500" />
                      <div>
                        <p className="font-medium">Disinformation Detection</p>
                        <p className="text-sm text-muted-foreground">Auto-generate fact-check videos</p>
                      </div>
                    </div>
                    <Switch checked={autoTriggerEnabled} onCheckedChange={setAutoTriggerEnabled} />
                  </div>

                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div className="flex items-center gap-3">
                      <TrendingUp className="h-5 w-5 text-blue-500" />
                      <div>
                        <p className="font-medium">Trending Topics</p>
                        <p className="text-sm text-muted-foreground">Create content for viral topics</p>
                      </div>
                    </div>
                    <Switch />
                  </div>

                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div className="flex items-center gap-3">
                      <Clock className="h-5 w-5 text-green-500" />
                      <div>
                        <p className="font-medium">Scheduled Content</p>
                        <p className="text-sm text-muted-foreground">Weekly civic education series</p>
                      </div>
                    </div>
                    <Switch />
                  </div>

                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div className="flex items-center gap-3">
                      <Users className="h-5 w-5 text-purple-500" />
                      <div>
                        <p className="font-medium">Political Events</p>
                        <p className="text-sm text-muted-foreground">Rally summaries and fact-checks</p>
                      </div>
                    </div>
                    <Switch />
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <h4 className="font-medium mb-2">Trigger Settings</h4>
                  <div className="space-y-3">
                    <div className="space-y-2">
                      <Label>Response Time (minutes)</Label>
                      <Slider defaultValue={[15]} max={60} min={5} step={5} />
                      <p className="text-xs text-muted-foreground">Generate response videos within 15 minutes</p>
                    </div>
                    <div className="space-y-2">
                      <Label>Confidence Threshold</Label>
                      <Slider defaultValue={[75]} max={100} min={50} step={5} />
                      <p className="text-xs text-muted-foreground">Minimum 75% confidence to auto-generate</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Brain className="h-5 w-5" />
                  AI Learning Insights
                </CardTitle>
                <CardDescription>
                  AI-discovered patterns for optimal video performance
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                    <p className="font-medium text-blue-900 dark:text-blue-100">Optimal Posting Time</p>
                    <p className="text-sm text-blue-700 dark:text-blue-300">6-8 PM weekdays show highest engagement</p>
                  </div>

                  <div className="p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
                    <p className="font-medium text-green-900 dark:text-green-100">Voice Preference</p>
                    <p className="text-sm text-green-700 dark:text-green-300">Youthful voices perform 40% better for election content</p>
                  </div>

                  <div className="p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
                    <p className="font-medium text-purple-900 dark:text-purple-100">Visual Elements</p>
                    <p className="text-sm text-purple-700 dark:text-purple-300">Charts increase comprehension by 65%</p>
                  </div>

                  <div className="p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg">
                    <p className="font-medium text-orange-900 dark:text-orange-100">Language Mix</p>
                    <p className="text-sm text-orange-700 dark:text-orange-300">Pidgin content drives 3x more shares in SW region</p>
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <h4 className="font-medium mb-2">Recent Auto-Generations</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex items-center justify-between">
                      <span>Fact-check: Road Construction Claims</span>
                      <Badge variant="outline">12 min ago</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>Election Explainer: Voting Process</span>
                      <Badge variant="outline">2 hours ago</Badge>
                    </div>
                    <div className="flex items-center justify-between">
                      <span>Unity Message: Regional Peace</span>
                      <Badge variant="outline">1 day ago</Badge>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Export Tools */}
        <TabsContent value="export" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Share2 className="h-5 w-5" />
                Multiplatform Export & Distribution
              </CardTitle>
              <CardDescription>
                Export and distribute videos across all platforms
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <h3 className="font-semibold">Direct Platform Publishing</h3>
                  <div className="space-y-2">
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Hash className="h-4 w-4" />
                      Publish to TikTok
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <MessageSquare className="h-4 w-4" />
                      Send to WhatsApp Broadcast
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Camera className="h-4 w-4" />
                      Post to Instagram
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Monitor className="h-4 w-4" />
                      Submit to TV Partners
                    </Button>
                  </div>
                </div>

                <div className="space-y-4">
                  <h3 className="font-semibold">Download Formats</h3>
                  <div className="space-y-2">
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Download className="h-4 w-4" />
                      MP4 - High Quality (TV/Desktop)
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Download className="h-4 w-4" />
                      MP4 - Mobile Optimized
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Download className="h-4 w-4" />
                      Audio Only (MP3)
                    </Button>
                    <Button className="w-full flex items-center gap-2 justify-start" variant="outline">
                      <Download className="h-4 w-4" />
                      Script & Subtitles (SRT)
                    </Button>
                  </div>
                </div>
              </div>

              <div className="pt-6 border-t">
                <h3 className="font-semibold mb-4">Batch Operations</h3>
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-4">
                  <Button className="flex items-center gap-2" variant="outline">
                    <Globe className="h-4 w-4" />
                    Export All Recent Videos
                  </Button>
                  <Button className="flex items-center gap-2" variant="outline">
                    <Languages className="h-4 w-4" />
                    Generate Multi-Language Pack
                  </Button>
                  <Button className="flex items-center gap-2" variant="outline">
                    <Users className="h-4 w-4" />
                    Create Regional Campaign Set
                  </Button>
                </div>
              </div>

              <div className="pt-6 border-t">
                <h3 className="font-semibold mb-2">Distribution Analytics</h3>
                <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 text-sm">
                  <div className="text-center">
                    <p className="text-2xl font-bold text-blue-600">23</p>
                    <p className="text-muted-foreground">Videos Published Today</p>
                  </div>
                  <div className="text-center">
                    <p className="text-2xl font-bold text-green-600">89K</p>
                    <p className="text-muted-foreground">Total Reach</p>
                  </div>
                  <div className="text-center">
                    <p className="text-2xl font-bold text-purple-600">76%</p>
                    <p className="text-muted-foreground">Avg Engagement</p>
                  </div>
                  <div className="text-center">
                    <p className="text-2xl font-bold text-orange-600">4</p>
                    <p className="text-muted-foreground">TV Station Partners</p>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default CivicVideoGenerator;